sub=n1-n2
a=add
switch (a,
"add" = n1+n2
"sub" = n1-n2
)
n1=10
n2=20
add=n1+n2
sub=n1-n2
a="+"
switch (a,
"+" = n1+n2
"-" = n1-n2
)
n1=10
n2=20
add=n1+n2
sub=n1-n2
a=+
switch (a,
"+" = n1+n2
"-" = n1-n2
)
sum=0;
i=1
while(i<10){
sum=sum+i
print(sum)
i=i+1
}
n1=0
n2=1
n3
i=1
while(i<10){
n3=n1+n2
print(n3)
n1=n2
n2=n3
i=i+1
}
n1=0
n2=1
n3
i=1
while(i<11){
n3=n1+n2
print(n3)
n1=n2
n2=n3
i=i+1
}
n1=0
n2=1
print(paste(n1,n2))
n3
i=2
while(i<11){
n3=n1+n2
print(n3)
n1=n2
n2=n3
i=i+1
}
n=as.integer(readline(prompt = "Enter n"))
sum=0
i=1
while (i<n) {
sum=sum+i
}
n=as.integer(readline(prompt = "Enter n"))
sum=0
i=1
while (i<n) {
sum=sum+i
i=i+1
}
print(sum)
n1=10
n2=20
add=n1+n2
sub=n1-n2
a="+"
val=switch (a,
"+" = n1+n2
"-" = n1-n2
)
print(val)
source("C:/Users/Kasyap/OneDrive/DA/Lab2_7.R")
source("C:/Users/Kasyap/OneDrive/DA/Lab2_9.R")
a<-4
if(a%%2==0){
print("It is even number")
} else{
print("It is odd number")
}
a<-20
if(a==0){
print('The number is zero')
} else if(a>0){
print("The number is possitive")
} else {
print("The number is negative")
}
source("C:/Users/Kasyap/OneDrive/DA/Lab2_3.R")
num<-as.integer(readline(prompt = "Enter a number"))
sum<-0
while (tempnum>0) {
t=tempnum%%10
sum=sum+(t*t*t)
tempnum=tempnum/10
}
if(num==sum){
print("The number is AMSTRONG number")
} else{
print("The number is not AMSTRONG number")
}
num<-as.integer(readline(prompt = "Enter a number"))
sum<-0
while (tempnum>0) {
t=tempnum%%10
sum=sum+(t*t*t)
tempnum=tempnum/10
}
if(num==sum){
print("The number is AMSTRONG number")
} else{
print("The number is not AMSTRONG number")
}
num<-as.integer(readline(prompt = "Enter a number"))
tempnum<-num
sum<-0
while (tempnum>0) {
t=tempnum%%10
sum=sum+(t*t*t)
tempnum=tempnum/10
}
if(num==sum){
print("The number is AMSTRONG number")
} else{
print("The number is not AMSTRONG number")
}
str<-"I am Kasyap"
str<-"I am Kasyap"
i<-0
repeat{
if(i>5){
break
}
print(str)
i<-i+1
}
i=1
lim=10
repeat{
print(seq(i,i+9))
i=i+1
if(i>lim){
break
}
}
vec<-c(1:4)
for (i in vec) {
print("R programming")
next
}
n1=0
n2=1
print(paste(n1,n2))
n3
i=2
while(i<11){
n3=n1+n2
print(n3)
n1=n2
n2=n3
i=i+1
}
n=as.integer(readline(prompt = "Enter n"))
i=1
while (i<=n) {
sum=sum+i
i=i+1
}
print(sum)
source("C:/Users/Kasyap/OneDrive/DA/Lab2_10.R")
number1 <- 420
number2 <- 40
operator <- readline(prompt="Enter +/- ")
switch(operator,
"+" = print(paste("Addition of two numbers is: ", number1 + number2)),
"-" = print(paste("Subtraction of two numbers is: ", number1 - number2)),
)
source("C:/Users/Kasyap/OneDrive/DA/Lab2_9.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document", encoding = 'UTF-8')
source("~/.active-rstudio-document", encoding = 'UTF-8')
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
data=c(30,40,30)
label=c("DS","RP","ML")
pie(data,names.arg)
data=c(30,40,30)
label=c("DS","RP","ML")
pie(data,names.arg=label)
data=c(30,40,30)
label=c("DS","RP","ML")
pie(data,names.arg=label,main="Percentage of students")
data=c(30,40,30)
label=c("DS","RP","ML")
pie(data,names.arg = label,density=10,col = colo,main = "Percentage of Student Register for a Subject "
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,density=10,col = colo,main = "Percentage of Student Register for a Subject "
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,density=10,col = colo,main = "Percentage of Student Register for a Subject ")
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,border="brown",density=10,col = colo,main = "Percentage of Student Register for a Subject ")
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,border="brown",density=10,col = colo,main = "Percentage of Student")
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,border="brown",density=10,col = colo,main = "Percentage of Student")
legend("topright",label,fill=colo,border = "white",,backgr,cex = .90)
data=c(30,40,30)
label=c("DS","RP","ML")
colo=c("red","blue","yellow")
pie(data,names.arg = label,border="brown",density=10,col = colo,main = "Percentage of Student")
legend("topright",label,fill=colo,border = "white",,bg="pink",cex = .90)
x=c(5,2,3,2,5,5)
median(x)
Y=c(70,65,90,70,80,75,95)
median(Y)
X=c(50,65, 72, 84, 90, 98)
exp (mean (log (X)))
X=c(50,65, 72, 84, 90, 98)
gm=exp (mean (log (X)))
print(gm)
Y=c(22000, 25000, 34000, 40000, 63000)
gm=exp (mean (log (Y)))
print(gm)
x=c(24,25,22,27,26,23)
y=c(114,112,110,251,13)
x=c(24,25,22,27,26,23)
y=c(114,112,110,251,132,139)
cov(x,y,method = "pearson")
data=c(13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45, 46, 52, 70)
mean=mean(data)
print(mean)
median(data)
mode(data)
mode = function(){
return(sort(data)[1])
}
mode()
boxplot(data)
mean(range(data))
first_quar=quantile(data,0.25)
first_quar
third_quar=quantile(data,0.75)
third_quar
x=c(572,	572,	573,	568,	569,	575,	565,	570)
Mean=mean(x)
Mean
Median=median(x)
Median
Varience=var(x)
Varience
ST_deve=stdin(x)
ST_deve=sd(x)
ST_deve
source("~/.active-rstudio-document", encoding = 'UTF-8')
source("~/.active-rstudio-document", encoding = 'UTF-8')
GroupedMedian <- function(frequencies, intervals, sep = NULL, trim = NULL) {
# If "sep" is specified, the function will try to create the
#   required "intervals" matrix. "trim" removes any unwanted
#   characters before attempting to convert the ranges to numeric.
if (!is.null(sep)) {
if (is.null(trim)) pattern <- ""
else if (trim == "cut") pattern <- "\\[|\\]|\\(|\\)"
else pattern <- trim
intervals <- sapply(strsplit(gsub(pattern, "", intervals), sep), as.numeric)
}
Midpoints <- rowMeans(intervals)
cf <- cumsum(frequencies)
Midrow <- findInterval(max(cf)/2, cf) + 1
L <- intervals[1, Midrow]      # lower class boundary of median class
h <- diff(intervals[, Midrow]) # size of median class
f <- frequencies[Midrow]       # frequency of median class
cf2 <- cf[Midrow - 1]          # cumulative frequency class before median class
n_2 <- max(cf)/2               # total observations divided by 2
unname(L + (n_2 - cf2)/f * h)
}
df = data.frame(age=c("1-5", "5-15", "15-20","20-50","50-80","80-110"), freq=c(200, 450, 300, 1500, 700, 44))
GroupedMedian(df$freq, df$age, sep = "-")
x=c(3.4	,2.5	,4.8	,2.9	,3.6,
2.8	,3.3	,5.6	,3.7,2.8,
4.4	,4.0,5.2,3.0,4.8)
median(x)
mean(x)
df=data.frame(Eid=c("a1","a2","a3"),)
df=data.frame(Eid=c("a1","a2","a3"),EmpYear=c(2021,2019,2022))
df
sub=subset(df,df.$EmpYear>2020)
sub=subset(df,df$EmpYear>2020)
sub
df=data.frame(Eid=c("a1","a2","a3"),EmpYear=c(2021,2019,2022))
df
sub=subset(df,df$EmpYear>2020)
sub
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
count=0
n=as.integer(readline(prompt = "Enter n"))
for(i in 1:n){
if(n%%i==0)
count++;
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
count=0
#n=as.integer(readline(prompt = "Enter n"))
n=43
for(i in 1:n){
if (n%%i==0) {
count++
}
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
count=0
n=43
for (i in 2:n) {
if((i%%n)==0)
count=count+1
}
if(count==0)
print(paste(n," is a prime number"))
else
print(paste(n,"is not a prime number"))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
count=0
n=43
for (i in 2:n) {
if((i%%n)==0)
count=count+1
}
if(count==0)
print(paste(n," is a prime number"))
else
print(paste(n,"is not a prime number"))
count=0
n=43
for (i in 2:n) {
if((n%%i)==0)
count=count+1
}
if(count==0)
print(paste(n," is a prime number"))
else
print(paste(n,"is not a prime number"))
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
count=0
for (n in 1:100) {
for (i in 2:n) {
if((n%%i)==0)
count=count+1
}
if(count==0)
print(paste(n," is a prime number"))
}
count=0
for (n in 1:100) {
for (i in 2:n) {
if((n%%i)==0)
count=count+1
}
if(count==0)
print(paste(n," is a prime number"))
}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
for (i in 1:4) { print(i)}
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
A <- c (3, 2, NA, 5, 3, 7, NA, NA, 5, 2, 6)
length(A)
p<-sort(A)
p
length(p)
q<-sort(B)
q
B <- c (3, 2, NA, 5, 3, 7, NA, “NA”, 5, 2, 6)
B <- c (3, 2, NA, 5, 3, 7, NA, NA, 5, 2, 6)
length(B)
q<-sort(B)
q
sort(sample(letters,10))
sample(letters,5)
sample(LETTERS,5)
p=sample(LETTERS,5)
p
q=sample(letters,5)
r=c(p,q)
r
sort(r)
sort(r,decreasing = TRUE)
x=rnorm(100,mean = 100,sd=5)
x
hist(x)
boxplot(x)
meanx
mean(x)
sd(x)
median(x)
x=c(3.4,	2.5	,4.8,	2.9,	3.6,
2.8,	3.3,	5.6,	3.7,	2.8,
4.4,	4.0,	5.2,	3.0,	4.8
)
x
size(x)
length(x)
mean(x)
i=1
lim=10
repeat{
print(seq(i,i+8))
i=i+1
if(i>lim){
break
}
}
data=read.table("titanic.txt",header = TRUE)
t.test(x)
IQR(x)
median(x)
getOption("repos")
#setwd("C:\Users\Kasyap\OneDrive\ML\Project")
tr <- read.csv('Loan.csv', header = TRUE)
setwd("C:\Users\Kasyap\OneDrive\ML\Project")
setwd("C:\\Users\Kasyap\OneDrive\ML\Project")
setwd("C:\\Users\\Kasyap\\OneDrive\\ML\\Project")
tr <- read.csv('Loan.csv', header = TRUE)
head(tr)
summary(tr)
tr <- read.csv(file="train.csv", na.strings=c("", "NA"), header=TRUE)
setwd("C:\\Users\\Kasyap\\OneDrive\\ML\\Project")
tr <- read.csv(file="train.csv", na.strings=c("", "NA"), header=TRUE)
tr <- read.csv(file="Loan.csv", na.strings=c("", "NA"), header=TRUE)
library(plyr)
install.packages('plyr')
library(plyr)
install.packages('plyr')
library(plyr)
tr$Dependents <- revalue(tr$Dependents, c("3+"="3"))
tr$Dependents <- revalue(tr$Dependents, c("3+"="3"))
tr <- complete(imputed_Data,2)
